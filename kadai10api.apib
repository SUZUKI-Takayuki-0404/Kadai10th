FORMAT: 1A
HOST: http://localhost:8080

# Kadai10-API
第10回課題で使用するAPI一覧

# Group Prefectures
都道府県データベースに対する操作

## Resource [/prefectures]
### createPref [POST]
既存とは重複しない都道府県コードで都道府県データを新規追加する

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "prefCode": "11" - 01～47までの2桁の数字,
                "prefName": "さいたま県" - 8文字以内の文字列
            }

+ Response 201 (application/json)

    + Headers

            Location: /prefectures/11

    + Attributes
        + prefCode: 11 (string) - 都道府県コード
        + prefName: さいたま県 (string) - 都道府県名

    + Body

            {
                "message" : "successfully created",
                "Prefectures" :
                {
                    "prefCode" : "11",
                    "prefName" : "さいたま県"
                }
            }


### getAllPrefs [GET]
既存の都道府県データを全て返す

+ Response 200 (application/json)

    + Attributes
        + prefCode: 01 (string) - 都道府県コード
        + prefName: 北海道 (string) - 都道府県名

    + Body

            {
                "message" : "successfully got",
                "Prefectures" :
                [{
                    "prefCode" : "01",
                    "prefName" : "北海道"
                },{
                    "prefCode" : "11",
                    "prefName" : "埼玉県"
                }]
            }


## Resource [/prefectures/{?prefName}]
### getPrefByName [GET]
指定した都道府県名に対応する都道府県データを返す

+ Parameters
    + prefName: 北海道 (string, required) - 都道府県名
        - 8文字以内の文字列

+ Response 200 (application/json)

    + Attributes
        + prefCode: 01 (string) - 都道府県コード
        + prefName: 北海道 (string) - 都道府県名

    + Body

            {
                "message" : "successfully got",
                "prefCode" : "01",
                "prefName" : "北海道"
            }


## Resource [/prefectures/{prefCode}]

+ Parameters
    + prefCode: 11 (string, required) - 都道府県コード
        - 01～47までの2桁の数字

### getPrefByCode [GET]
指定した既存の都道府県コードに対応する都道府県データを返す

+ Response 200 (application/json)

    + Attributes
        + prefName: 埼玉県 (string) - 都道府県名

    + Body

            {
                "message" : "successfully got",
                "prefCode": "11",
                "prefName" : "さいたま県"
            }


### updatePref [PATCH]
指定した既存の都道府県コードに対応する都道府県データを書き換える

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "prefCode": "11" - 01～47までの2桁の数字,
                "prefName": "埼玉県" - 8文字以内の文字列
            }

+ Response 204


### deletePref [DELETE]
指定した既存の都道府県コードに対応する都道府県データを削除する

+ Response 204


# Group Airports
空港データベースに対する操作

## Resource [/airports]
### createAirport [POST]
既存とは重複しない空港コードで空港データを新規追加する（要：既存の都道府県コード）

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "airportCode": "MYE" - 3文字の大文字アルファベット,
                "airportName": "三宅島" - 8文字以内の文字列,
                "prefCode": "13" - 01～47までの2桁の数
            }

+ Response 201 (application/json)

    + Headers

            Location: /airports/MYE

    + Body

            {
                "message": "successfully created",
                "airports":
                {
                    "airportCode" : "MYE",
                    "airportName" : "三宅島",
                    "prefName" : "東京都"
                }
            }


### getAllAirports [GET]
既存の空港データを全て返す

+ Response 200 (application/json)

    + Attributes
        + airportCode: KIX (string) - 空港コード
        + airportName: 関西国際空港 (string) - 空港名
        + prefName: 大阪府 (string) - 所在都道府県

    + Body

            {
                "message": "successfully got",
                "airports": 
                [{
                    "airportCode": "NKM",
                    "airportName": "小牧空港",
                    "prefName": "愛知県"
                },{
                    "airportCode": "NGO",
                    "airportName": "中部国際空港",
                    "prefName": "愛知県"
                },{
                    "airportCode": "ITM",
                    "airportName": "伊丹空港",
                    "prefName": "大阪府"
                },{
                    "airportCode": "KIX",
                    "airportName": "関西国際空港",
                    "prefName": "大阪府"
                }]
            }


## Resource [/airports/prefectures{?prefName}]
### getAirportsByPrefName [GET]
指定した指定した都道府県名に対応する空港データを全て返す

+ Parameters
    + prefName: 大阪府 (string) - 所在都道府県
        - 8文字以内の文字列
        
+ Response 200 (application/json)

    + Attributes
        + airportCode: KIX (string) - 空港コード
        + airportName: 関西国際空港 (string) - 空港名
        + prefName: 大阪府 (string) - 所在都道府県

    + Body

            {
                "message": "successfully got",
                "airports":
                [{
                    "airportCode": "ITM",
                    "airportName": "伊丹空港",
                    "prefName": "大阪府"
                },{
                    "airportCode": "KIX",
                    "airportName": "関西国際空港",
                    "prefName": "大阪府"
                }]
            }


## Resource [/airports/{airportCode}]

+ Parameters
    + airportCode: NKM (string, required) - 空港コード
        - 3文字の大文字アルファベット

### getAirportByCode [GET]
指定した既存の空港コードに対応する空港データを返す

+ Response 200 (application/json)

    + Attributes
        + airportCode: NKM (string) - 空港コード
        + airportName: 小牧 (string) - 空港名
        + prefName: 愛知県 (string) - 所在都道府県

    + Body

            {
                "message" : "successfully got",
                "airports" :
                {
                    "airportCode" : "NKM",
                    "airportName" : "小牧",
                    "prefName" : "愛知県"
                }
            }


### updateAirport [PATCH]
指定した既存の空港コードに対応する空港データを書き換える

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "airportCode": "NKM" - 3文字の大文字アルファベット,
                "airportName": "名古屋" - 8文字以内の文字列,
                "prefCode": "23" - 01～47までの2桁の数
            }

+ Response 204


### deleteAirport [DELETE]
指定した既存の空港コードに対応する空港データを削除する

+ Response 204


# Group Exceptions

## NotFound
### No Resource
GET/PATCH/DELETEリクエスト、および空港データベースのPOSTリクエスト(createAirport)に対し、指定したパラメータに該当するデータが無い場合の処理

+ Response 404
            
            {"message" : "This code is not found"}


## Conflict
### Duplicate Code
POSTリクエストで指定プライマリーキーが既に存在している場合の処理
+ Response 409
            
            {"message" : "This code will be duplicated"}


### Same As Current
PATCHリクエストで更新前に対し変更が無い場合の処理
+ Response 409
            
            {"message" : "Current name will be nothing updated"}


### Code In Use
DELETEリクエストで指定プライマリーキーが外部キーとして使用中であり削除できない場合の処理
+ Response 409
            
            {"message" : "This code is in use"}


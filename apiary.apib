FORMAT: 1A
HOST: http://localhost:8080

# Kadai10-API
第10回課題で使用するAPI一覧

# Group Prefectures
都道府県データベースに対する操作

## Resource [/prefectures/{?prefCode}]
### getPrefByCode [GET]
指定した既存の都道府県コードに対応する都道府県データを返す

+ Parameters
    + prefCode: 01 (string, required) - 都道府県コード

+ Response 200 (application/json)

    + Attributes
        + prefName: 北海道 (string) - 都道府県名

    + Body

            {
                "message" : "successfully got",
                "prefName" : "北海道"
            }

## Resource [/prefectures/{?prefName}]
### getPrefByName [GET]
指定した既存の都道府県名に対応する都道府県データを返す

+ Parameters
    + prefName: 北海道 (string, required) - 都道府県名

+ Response 200 (application/json)

    + Attributes
        + prefCode: 01 (string) - 都道府県コード

    + Body

            {
                "message" : "successfully got",
                "prefCode" : "01"
            }

## Resource [/prefectures]
### getAllPrefs [GET]
全ての既存の都道府県コードとこれに対応する都道府県名を返す

+ Response 200 (application/json)

    + Attributes
        + prefCode: 01 (string) - 都道府県コード
        + prefName: 北海道 (string) - 都道府県名

    + Body

            {
                "message" : "successfully got",
                "Prefectures" :
                [{
                    "prefCode" : "01",
                    "prefName" : "北海道"
                },{
                    "prefCode" : "11",
                    "prefName" : "埼玉県"
                }]
            }

### createPref [POST]
既存とは重複しない都道府県コードとその都道府県名を追加

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "prefCode": "11",
                "prefName": "さいたま県"
            }

+ Response 201 (application/json)

    + Headers

            Location: /prefectures/11

    + Attributes
        + prefCode: 11 (string) - 都道府県コード
        + prefName: 埼玉県 (string) - 都道府県名

    + Body

            {
                "message" : "successfully created",
                "Prefectures" :
                {
                    "prefCode" : "11",
                    "prefName" : "埼玉県"
                }
            }

## Resource [/prefectures/{prefCode}]

+ Parameters
    + prefCode: 11 (string, required) - 都道府県コード

### updatePref [PATCH]
指定した既存の都道府県名に対応する都道府県コードを書き換え

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "prefCode": "11",
                "prefName": "埼玉県"
            }

+ Response 200 (application/json)

    + Attributes
        + prefCode: 11 (string) - 都道府県コード
        + prefName: 埼玉県 (string) - 都道府県名

    + Body

            {
                "message" : "successfully updated",
                "Prefectures" :
                {
                    "prefCode" : "11",
                    "prefName" : "埼玉県"
                }
            }

### deletePref [DELETE]
指定した既存の都道府県コードに対応する所在都道府県を削除

+ Response 204


# Group Airports
空港データベースに対する操作

## Resource [/airports/{?airportCode}]
### getAirport [GET]
指定した既存の空港コードに対応する空港名、都道府県コード、都道府県名を返す

+ Parameters
    + airportCode: HND (string, required) - 空港コード

+ Response 200 (application/json)

    + Attributes
        + airportCode: HND (string) - 空港コード
        + airportName: 羽田 (string) - 空港名
        + prefCode: 13 (string) - 都道府県コード
        + prefName: 東京都 (string) - 所在都道府県

    + Body

            {
                "message" : "successfully got",
                "airports" :
                {
                    "airportCode" : "HND",
                    "airportName" : "羽田",
                    "prefCode": "13",
                    "prefName" : "東京都"
                }
            }

## Resource [/airports/{?prefCode}]
### getAirportsInPref [GET]
指定した既存の都道府県に存在する空港コード、空港名を全て返す

+ Parameters
    + prefCode: 27 (string, required) - 都道府県コード

+ Response 200 (application/json)

    + Attributes
        + airportCode: KIX (string) - 空港コード
        + airportName: 関西国際空港 (string) - 空港名
        + prefCode: 27 (string) - 都道府県コード
        + prefName: 大阪府 (string) - 所在都道府県

    + Body

            {
                "message": "successfully got",
                "airports":
                [{
                    "airportCode": "ITM",
                    "airportName": "伊丹空港",
                    "prefCode": "27",
                    "prefName": "大阪府"
                },{
                    "airportCode": "KIX",
                    "airportName": "関西国際空港",
                    "prefCode": "27",
                    "prefName": "大阪府"
                }]
            }

## Resource [/airports]
### getAllAirports [GET]
全ての既存の空港コードとこれに対応する空港名、都道府県コード、都道府県名を返す

+ Response 200 (application/json)

    + Attributes
        + airportCode: KIX (string) - 空港コード
        + airportName: 関西国際空港 (string) - 空港名
        + prefCode: 27 (string) - 都道府県コード
        + prefName: 大阪府 (string) - 所在都道府県

    + Body

            {
                "message": "successfully got",
                "airports": 
                [{
                    "airportCode": "NKM",
                    "airportName": "小牧空港",
                    "prefCode": "23",
                    "prefName": "愛知県"
                },{
                    "airportCode": "NGO",
                    "airportName": "中部国際空港",
                    "prefCode": "23",
                    "prefName": "愛知県"
                },{
                    "airportCode": "ITM",
                    "airportName": "伊丹空港",
                    "prefCode": "27",
                    "prefName": "大阪府"
                },{
                    "airportCode": "KIX",
                    "airportName": "関西国際空港",
                    "prefCode": "27",
                    "prefName": "大阪府"
                }]
            }

### createAirport [POST]
既存とは重複しない任意の空港コードで空港を新規追加（要：既存の都道府県コード）

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "airportCode": "MYE",
                "airportName": "三宅島",
                "prefCode": "13"
            }

+ Response 201 (application/json)

    + Headers

            Location: /airports/MYE

    + Body

            {
                "message": "successfully created",
                "airports":
                {
                    "airportCode" : "MYE",
                    "airportName" : "三宅島",
                    "prefCode": "13",
                    "prefName" : "東京都"
                }
            }

## Resource [/airports/{airportCode}]

+ Parameters
    + airportCode: NKM (string, required) - 空港コード

### updateAirport [PATCH]
指定した既存の空港コードに対応する空港名、都道府県コードを書き換え

+ Request

    + Headers

            Accept: application/json

    + Body

            {
                "airportCode": "NKM",
                "airportName": "名古屋",
                "prefCode": "23"
            }

+ Response 200 (application/json)

    + Attributes
        + airportCode: NKM (string) - 空港コード
        + airportName: 名古屋 (string) - 空港名
        + prefCode: 23 (string) - 都道府県コード
        + prefName: 愛知県 (string) - 所在都道府県

    + Body

            {
                "message": "successfully created",
                "Airports": {
                    "airportCode": "NKM",
                    "airportName": "名古屋",
                    "prefCode": "23",
                    "prefName": "愛知県"
                }
            }

### deleteAirport [DELETE]
指定した既存の空港コードに対応する空港名と所在都道府県を削除

+ Response 204


# Group Exceptions

## NotFound
### No-Resource
GET/PATCH/DELETEリクエスト、および空港データベースのPOSTリクエスト(createAirport)に対し、指定したパラメータに該当するデータが無い場合の処理

+ Response 404
            
            {"message" : "not found"}

## Conflict
### Code-Duplicated
POSTリクエストで指定プライマリーキーが既存orである場合の処理
+ Response 409
            
            {"message" : "code duplicated"}

### Same-As-Current
PATCHリクエストで書き換え前に対し変更が無い場合の処理
+ Response 409
            
            {"message" : "nothing updated"}